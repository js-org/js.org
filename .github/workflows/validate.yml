name: Validate

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  contents: read

jobs:
  validate-cnames:
    runs-on: ubuntu-latest

    env:
      GH_EVENT_HASH: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GH_EVENT_HASH }}

      - uses: actions/checkout@v4
        with:
          repository: js-org/js.org-cleanup
          path: cleanup

      - uses: actions/setup-node@v4
        with:
          node-version-file: cleanup/.nvmrc
          cache: npm
          cache-dependency-path: cleanup/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: cleanup

      - name: Validate cnames_active.js
        run: node index.js --validate ../cnames_active.js
        working-directory: cleanup

  validate-pr-template:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR template and comment
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";

            const checkbox1 = /\[x\].*?There is reasonable content/i.test(body);
            const checkbox2 = /\[x\].*?I have read and accepted/i.test(body);
            const urlLineRegex = /^[ \t]*-[ \t]*The site content can be seen at[ \t]+(?:<)?(?:\[.*?\]\()?https?:\/\/[^\s>()]+(?:\))?(?:>)?/m;
            const urlValid = urlLineRegex.exec(body) !== null;
            const explanationMatch = />\s*The site content is(?:\s*|\s*\n)(.+)/i.exec(body);
            const explanation = explanationMatch && explanationMatch[1].trim().length > 10;

            const failed = !checkbox1 || !checkbox2 || !urlValid || !explanation;

            if (!failed) {
              console.log("✅ PR template is valid.");
              return;
            }

            const commentBody = `❌ **PR template is not properly filled:**\n\n- Checkbox1 (reasonable content): ${checkbox1 ? "✅" : "❌"}\n- Checkbox2 (read and accepted): ${checkbox2 ? "✅" : "❌"}\n- URL on correct line: ${urlValid ? "✅" : "❌"}\n- Explanation (> The site content is...): ${explanation ? "✅" : "❌"}\n\nPlease update your PR description accordingly.`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
            });

            const existingComment = comments.find(c =>
              c.user.login === 'github-actions[bot]' &&
              c.body.includes("**PR template is not properly filled:**")
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: commentBody
              });
            }

            core.setFailed("PR template validation failed.");
